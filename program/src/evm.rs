use crate::db::InMemoryDatabase;
use revm::primitives::ResultAndState;
use revm::Evm;

/// Runs the provided evm until the end and returns the result and the state.
pub fn run_evm<EXT>(mut evm: Evm<EXT, InMemoryDatabase>) -> eyre::Result<ResultAndState> {
    evm.transact().map_err(|err| eyre::eyre!(err.to_string()))
}
